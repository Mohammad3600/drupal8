{#
/**
 * @file
 * Default theme implementation to display a paragraph.
 *
 * Available variables:
 * - paragraph: Full paragraph entity.
 *   Only method names starting with "get", "has", or "is" and a few common
 *   methods such as "id", "label", and "bundle" are available. For example:
 *   - paragraph.getCreatedTime() will return the paragraph creation timestamp.
 *   - paragraph.id(): The paragraph ID.
 *   - paragraph.bundle(): The type of the paragraph, for example, "image" or "text".
 *   - paragraph.getOwnerId(): The user ID of the paragraph author.
 *   See Drupal\paragraphs\Entity\Paragraph for a full list of public properties
 *   and methods for the paragraph object.
 * - content: All paragraph items. Use {{ content }} to print them all,
 *   or print a subset such as {{ content.field_example }}. Use
 *   {{ content|without('field_example') }} to temporarily suppress the printing
 *   of a given child element.
 * - attributes: HTML attributes for the containing element.
 *   The attributes.class element may contain one or more of the following
 *   classes:
 *   - paragraphs: The current template type (also known as a "theming hook").
 *   - paragraphs--type-[type]: The current paragraphs type. For example, if the paragraph is an
 *     "Image" it would result in "paragraphs--type--image". Note that the machine
 *     name will often be in a short form of the human readable label.
 *   - paragraphs--view-mode--[view_mode]: The View Mode of the paragraph; for example, a
 *     preview would result in: "paragraphs--view-mode--preview", and
 *     default: "paragraphs--view-mode--default".
 * - view_mode: View mode; for example, "preview" or "full".
 * - logged_in: Flag for authenticated user status. Will be true when the
 *   current user is a logged-in member.
 * - is_admin: Flag for admin user status. Will be true when the current user
 *   is an administrator.
 *
 * @see template_preprocess_paragraph()
 *
 * @ingroup themeable
 */
#}
{%
  set classes = [
    'paragraph',
    'paragraph--type--' ~ paragraph.bundle|clean_class,
    view_mode ? 'paragraph--view-mode--' ~ view_mode|clean_class,
    not paragraph.isPublished() ? 'paragraph--unpublished'
  ]
%}
{% block paragraph %}
         {%  if content.field_button_link.0['#title'] != ""  %}
         <div class="row">
                 <div class="col-lg-4">
                    <a href="#" class="project_btn btn btn-success btn-sm mb-3">{{ content.field_button_link.0['#title'] }}<img src="https://localhost/D8eng/web/sites/default/files/2021-07//plus.svg" alt="plus-icon" title="plus"> </a>
                    <ul class="eco_concepts_list">
                    {% for i in 0..(content.field_link['#items']|length -1) %}
                         <li><a href="{{ content.field_link[i]['#url']}}" title="{{ content.field_link[i]['#title'] }}">{{ content.field_link[i]['#title'] }}</a></li>
                    {% endfor %}
                    </ul>
                 </div>
                 <div class="col-lg-8">
                    <a href="/files/external/SMinds_example_project.zip">
                     <figure>
                        <img src="{{ file_url(content.field_image['#items'].entity.uri.value) }}" class="img-fluid full_width" alt="get stated example product" title="example product">
                     </figure>
                    </a>
                 </div>
         </div>
         {% else %}
              <ul class="row row-cols-{{ content.field_image['#items']|length }} gx-0 text-center learning_center_images" >
                {% for item in content.field_image['#items'] %}
                     <li><a href="learning-center"><figure><img class="img-fluid full_width" alt="Learning center images" title="Learning center teaser" src="{{ file_url(item.entity.uri.value) }}"></figure></a></li>
                {% endfor %}
              </ul>             
         {% endif %}
{% endblock paragraph %}
